// Input

input {
    keyboard {
        xkb {
            // You can set rules, model, layout, variant and options.
            // For more information, see xkeyboard-config(7).
		layout "us"
            // For example:
            // layout "us,ru"
            // options "grp:win_space_toggle,compose:ralt,ctrl:nocaps"
        }
    }

    touchpad {
        tap
        // dwt
        // dwtp
        natural-scroll
        // accel-speed 0.2
        // accel-profile "flat"
    }

    mouse {
        // natural-scroll
        // accel-speed 0.2
        // accel-profile "flat"
    }

    // Uncomment this to make the mouse warp to the center of newly focused windows.
    // warp-mouse-to-focus

    // Focus windows and outputs automatically when moving the mouse into them.
    // focus-follows-mouse
}

// Remember to uncomment the node by removing "/-"!
/-output "eDP-1" {
    // Uncomment this line to disable this output.
    // off

    // Run `niri msg outputs` while inside a niri instance to list all outputs and their modes.
    mode "1920x1080@120.030"

    // Scale is a floating-point number, but at the moment only integer values work.
    scale 1.0

    // Transform allows to rotate the output counter-clockwise, valid values are:
    // normal, 90, 180, 270, flipped, flipped-90, flipped-180 and flipped-270.
    transform "normal"

    // position x=1280 y=0
}

output "HDMI-A-1" {
    // off
    mode "1366x768@60.0"
    scale 1.0

    // for portrait mode
    // transform "90"

    // position x=0 y=0

}

layout {
    gaps 14

    center-focused-column "on-overflow"
    // center-focused-column "never"
    // center-focused-column "always"

    preset-column-widths {
        proportion 0.33333
        proportion 0.5
        proportion 0.66667

        // fixed 1920
    }

    default-column-width { proportion 0.5; }

    // If you leave the brackets empty, the windows themselves will decide their initial width.
    // default-column-width {}
	
    focus-ring {
	off

	width 3

        active-color "#31324400"
	inactive-color "#31324400"

        // active-gradient from="#80c8ff" to="#bbddff" angle=45
        // inactive-gradient from="#505050" to="#808080" angle=45 relative-to="workspace-view"
    }

    border {
        // off

        width 2
        active-color "#414868FF"
        inactive-color "#1f2335A3"

        // active-gradient from="#ffbb66" to="#ffc880" angle=45 relative-to="workspace-view"
        // inactive-gradient from="#505050" to="#808080" angle=45 relative-to="workspace-view"
    }

    struts {
        // left 64
        // right 64
        // top 64
        // bottom 64
    }
}

prefer-no-csd

spawn-at-startup "waybar"
spawn-at-startup "swww-daemon"
spawn-at-startup "swww img ~/.wallpapers/red.jpeg"
spawn-at-startup "swayosd-server"
spawn-at-startup "~/.scripts/swayidle.sh"
spawn-at-startup "swaync -c ~/.config/swaync/config.json -s ~/.config/swaync/style.css"

screenshot-path "~/Pictures/Screenshots/Screenshot from %Y-%m-%d %H-%M-%S.png"

hotkey-overlay {
    skip-at-startup
}

// Animation settings.

animations {
    // Uncomment to turn off all animations.
    // off

    // Slow down all animations by this factor. Values below 1 speed them up instead.
    // slowdown 3.0
}

window-rule {
    match app-id=r#"^org\.wezfurlong\.wezterm$"#
    default-column-width {}
}

// Example: block out two password managers from screen capture.
// (This example rule is commented out with a "/-" in front.)
/-window-rule {
    match app-id=r#"^org\.keepassxc\.KeePassXC$"#
    match app-id=r#"^org\.gnome\.World\.Secrets$"#

    block-out-from "screen-capture"

    // Use this instead if you want them visible on third-party screenshot tools.
    // block-out-from "screencast"
}

window-rule {
    // Border radius 
    clip-to-geometry true
    geometry-corner-radius 10
}

binds {
    // Mod-Shift-/, which is usually the same as Mod-?,
    // shows a list of important hotkeys.
    Mod+Shift+Slash { show-hotkey-overlay; }

    // Suggested binds for running programs: terminal, app launcher, screen locker.
    Mod+RETURN { spawn "kitty"; }
    Mod+D { spawn "anyrun"; }
    Mod+E { spawn "thunar"; }
    Super+Alt+L { spawn "swaylock"; }

    // Shell scripts execs
    Mod+W { spawn "bash" "-c" "exec ~/.scripts/waybar.sh"; }    
    
    // Audio controls bindings 
    XF86AudioRaiseVolume { spawn "bash" "-c" "exec ~/.scripts/swayosd.sh raise"; }
    XF86AudioLowerVolume { spawn "bash" "-c" "exec ~/.scripts/swayosd.sh lower"; }
    XF86AudioMute { spawn "bash" "-c" "exec ~/.scripts/swayosd.sh mute"; }
    XF86AudioMicMute { spawn "bash" "-c" "exec ~/.scripts/swayosd.sh micmute"; }
    XF86MonBrightnessUp { spawn "bash" "-c" "exec ~/.scripts/swayosd.sh brightness_up"; }
    XF86MonBrightnessDown { spawn "bash" "-c" "exec ~/.scripts/swayosd.sh brightness_down"; }

    // Close Active window
    Mod+Q { close-window; }

    // Move focus between columns
    Mod+Left  { focus-column-left; }
    Mod+Down  { focus-window-down; }
    Mod+Up    { focus-window-up; }
    Mod+Right { focus-column-right; }

    // Move entire column
    Mod+Ctrl+Left  { move-column-left; }
    Mod+Ctrl+Down  { move-window-down; }
    Mod+Ctrl+Up    { move-window-up; }
    Mod+Ctrl+Right { move-column-right; }
    // Mod+Ctrl+H  { move-column-left; }
    // Mod+Ctrl+J  { move-window-down; }
    // Mod+Ctrl+K    { move-window-up; }
    // Mod+Ctrl+L { move-column-right; }
  
    // Alternative commands that move across workspaces when reaching
    // the first or last window in a column.
    // Mod+J     { focus-window-or-workspace-down; }
    // Mod+K     { focus-window-or-workspace-up; }
    // Mod+Ctrl+J     { move-window-down-or-to-workspace-down; }
    // Mod+Ctrl+K     { move-window-up-or-to-workspace-up; }

    Mod+Home { focus-column-first; }
    Mod+End  { focus-column-last; }
    Mod+Ctrl+Home { move-column-to-first; }
    Mod+Ctrl+End  { move-column-to-last; }

    Mod+Shift+Left  { focus-monitor-left; }
    Mod+Shift+Down  { focus-monitor-down; }
    Mod+Shift+Up    { focus-monitor-up; }
    Mod+Shift+Right { focus-monitor-right; }
    // Mod+Shift+H  { focus-monitor-left; }
    // Mod+Shift+J  { focus-monitor-down; }
    // Mod+Shift+K    { focus-monitor-up; }
    // Mod+Shift+L { focus-monitor-right; }
   
    Mod+Shift+Ctrl+Left  { move-column-to-monitor-left; }
    Mod+Shift+Ctrl+Down  { move-column-to-monitor-down; }
    Mod+Shift+Ctrl+Up    { move-column-to-monitor-up; }
    Mod+Shift+Ctrl+Right { move-column-to-monitor-right; }
    // Mod+Shift+Ctrl+H     { move-column-to-monitor-left; }
    // Mod+Shift+Ctrl+J     { move-column-to-monitor-down; }
    // Mod+Shift+Ctrl+K     { move-column-to-monitor-up; }
    // Mod+Shift+Ctrl+L     { move-column-to-monitor-right; }

    // Alternatively, there are commands to move just a single window:
    // Mod+Shift+Ctrl+Left  { move-window-to-monitor-left; }
    // ...

    // And you can also move a whole workspace to another monitor:
    // Mod+Shift+Ctrl+Left  { move-workspace-to-monitor-left; }
    // ...

    Mod+Page_Down      { focus-workspace-down; }
    Mod+Page_Up        { focus-workspace-up; }
    Mod+U              { focus-workspace-down; }
    Mod+I              { focus-workspace-up; }
    Mod+Ctrl+Page_Down { move-column-to-workspace-down; }
    Mod+Ctrl+Page_Up   { move-column-to-workspace-up; }
    Mod+Ctrl+U         { move-column-to-workspace-down; }
    Mod+Ctrl+I         { move-column-to-workspace-up; }

    // Alternatively, there are commands to move just a single window:
    // Mod+Ctrl+Page_Down { move-window-to-workspace-down; }
    // ...

    Mod+Shift+Page_Down { move-workspace-down; }
    Mod+Shift+Page_Up   { move-workspace-up; }
    Mod+Shift+U         { move-workspace-down; }
    Mod+Shift+I         { move-workspace-up; }

    Mod+WheelScrollDown      cooldown-ms=150 { focus-workspace-down; }
    Mod+WheelScrollUp        cooldown-ms=150 { focus-workspace-up; }
    Mod+Ctrl+WheelScrollDown cooldown-ms=150 { move-column-to-workspace-down; }
    Mod+Ctrl+WheelScrollUp   cooldown-ms=150 { move-column-to-workspace-up; }

    Mod+WheelScrollRight      { focus-column-right; }
    Mod+WheelScrollLeft       { focus-column-left; }
    Mod+Ctrl+WheelScrollRight { move-column-right; }
    Mod+Ctrl+WheelScrollLeft  { move-column-left; }

    // Usually scrolling up and down with Shift in applications results in
    // horizontal scrolling; these binds replicate that.
    Mod+Shift+WheelScrollDown      { focus-column-right; }
    Mod+Shift+WheelScrollUp        { focus-column-left; }
    Mod+Ctrl+Shift+WheelScrollDown { move-column-right; }
    Mod+Ctrl+Shift+WheelScrollUp   { move-column-left; }

    // Focus workspace
    Mod+1 { spawn "~/.scripts/exec_and_signal.sh" "focus-workspace 1"; }
    Mod+2 { spawn "~/.scripts/exec_and_signal.sh" "focus-workspace 2"; }
    Mod+3 { spawn "~/.scripts/exec_and_signal.sh" "focus-workspace 3"; }
    Mod+4 { spawn "~/.scripts/exec_and_signal.sh" "focus-workspace 4"; }
    Mod+5 { spawn "~/.scripts/exec_and_signal.sh" "focus-workspace 5"; }
    Mod+6 { spawn "~/.scripts/exec_and_signal.sh" "focus-workspace 6"; }
    Mod+7 { spawn "~/.scripts/exec_and_signal.sh" "focus-workspace 7"; }
    Mod+8 {  spawn "~/.scripts/exec_and_signal.sh" "focus-workspace 8"; }
    Mod+9 {  spawn "~/.scripts/exec_and_signal.sh" "focus-workspace 9"; }

    // Move column to workspace
    Mod+Ctrl+1 { spawn "~/.scripts/exec_and_signal.sh" "move-column-to-workspace 1" "focus-workspace 1"; }
    Mod+Ctrl+2 { spawn "~/.scripts/exec_and_signal.sh" "move-column-to-workspace 2" "focus-workspace 2"; }
    Mod+Ctrl+3 { spawn "~/.scripts/exec_and_signal.sh" "move-column-to-workspace 3" "focus-workspace 3"; }
    Mod+Ctrl+4 { spawn "~/.scripts/exec_and_signal.sh" "move-column-to-workspace 4" "focus-workspace 4"; }
    Mod+Ctrl+5 { spawn "~/.scripts/exec_and_signal.sh" "move-column-to-workspace 5" "focus-workspace 5"; }
    Mod+Ctrl+6 { spawn "~/.scripts/exec_and_signal.sh" "move-column-to-workspace 6" "focus-workspace 6"; }
    Mod+Ctrl+7 { spawn "~/.scripts/exec_and_signal.sh" "move-column-to-workspace 7" "focus-workspace 7"; }
    Mod+Ctrl+8 { spawn "~/.scripts/exec_and_signal.sh" "move-column-to-workspace 8" "focus-workspace 8"; }
    Mod+Ctrl+9 { spawn "~/.scripts/exec_and_signal.sh" "move-column-to-workspace 9" "focus-workspace 9"; }

    // Alternatively, there are commands to move just a single window:
    // Mod+Ctrl+1 { move-window-to-workspace 1; }

    // Switches focus between the current and the previous workspace.
    // Mod+Tab { focus-workspace-previous; }

    Mod+Comma  { consume-window-into-column; }
    Mod+Period { expel-window-from-column; }

    // There are also commands that consume or expel a single window to the side.
    // Mod+BracketLeft  { consume-or-expel-window-left; }
    // Mod+BracketRight { consume-or-expel-window-right; }

    Mod+R { switch-preset-column-width; }
    Mod+Shift+R { reset-window-height; }
    Mod+F { maximize-column; }
    Mod+Shift+F { fullscreen-window; }
    Mod+C { center-column; }

    Mod+Minus { set-column-width "-10%"; }
    Mod+Equal { set-column-width "+10%"; }

    // Finer height adjustments when in column with other windows.
    Mod+Shift+Minus { set-window-height "-10%"; }
    Mod+Shift+Equal { set-window-height "+10%"; }

    // Actions to switch layouts.
    // Note: if you uncomment these, make sure you do NOT have
    // a matching layout switch hotkey configured in xkb options above.
    // Having both at once on the same hotkey will break the switching,
    // since it will switch twice upon pressing the hotkey (once by xkb, once by niri).
    Mod+Space       { switch-layout "next"; }
    Mod+Shift+Space { switch-layout "prev"; }

    Print { screenshot; }
    Ctrl+Print { screenshot-screen; }
    Alt+Print { screenshot-window; }


    // The quit action will show a confirmation dialog to avoid accidental exits.
    Mod+Shift+E { quit; }

    // Powers off the monitors. To turn them back on, do any input like
    // moving the mouse or pressing any other key.
    Mod+Shift+P { power-off-monitors; }
}

